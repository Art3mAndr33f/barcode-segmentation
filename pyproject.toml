[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "barcode-detection"
version = "0.1.0"
description = "MLOps pipeline for barcode detection using instance segmentation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "barcode_detection"}]

[tool.poetry.dependencies]
python = "^3.9"
torch = "^2.0.0"
torchvision = "^0.15.0"
detectron2 = {git = "https://github.com/facebookresearch/detectron2.git"}
pytorch-lightning = "^2.0.0"
hydra-core = "^1.3.0"
mlflow = "^2.7.0"
dvc = "^3.0.0"
opencv-python = "^4.8.0"
numpy = "^1.24.0"
pandas = "^2.0.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
pillow = "^10.0.0"
tqdm = "^4.65.0"
fire = "^0.5.0"
pathlib = "^1.0.1"
onnx = "^1.14.0"
onnxruntime = "^1.15.0"
tritonclient = {extras = ["all"], version = "^2.37.0"}
fastapi = "^0.103.0"
uvicorn = "^0.23.0"
pydantic = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"
jupyter = "^1.0.0"
notebook = "^7.0.0"

[tool.poetry.scripts]
barcode-train = "barcode_detection.training.train:main"
barcode-infer = "barcode_detection.inference.infer:main"
barcode-export = "barcode_detection.export.onnx_export:main"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
    ".pytest_cache"
]

[tool.mypy]
python_version = "3.9"
